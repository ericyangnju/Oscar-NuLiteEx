<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\NuLiteEx\NuLiteEx.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\NuLiteEx\NuLiteEx.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Mon Nov 23 17:04:14 2015
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Default_KeyHandler &rArr; Playback_KeypadHandler &rArr; App_StartPlay &rArr; NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[26]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[12]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ACMP_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[10]">ALC_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[b]">BOD_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[1c]">CAPS_IRQHandler</a> from interrupthandler.o(i.CAPS_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[12]">Default_Handler</a> from startup_isd9100.o(.text) referenced 13 times from startup_isd9100.o(RESET)
 <LI><a href="#[23]">Default_KeyHandler</a> from inputkeyactions.o(i.Default_KeyHandler) referenced 9 times from configio.o(.constdata)
 <LI><a href="#[d]">EINT0_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[e]">EINT1_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[f]">GPAB_IRQHandler</a> from interrupthandler.o(i.GPAB_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from i2c0int.o(i.I2C0_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[21]">I2C_MasterTx</a> from i2c0int.o(i.I2C_MasterTx) referenced from ly096bg30.o(i.OLED_SingleWrite)
 <LI><a href="#[1b]">I2S_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[1a]">PDMA_IRQHandler</a> from interrupthandler.o(i.PDMA_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[11]">PWM0_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[1e]">RTC_IRQHandler</a> from interrupthandler.o(i.RTC_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[24]">Reset_Handler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[16]">SPI0_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[20]">SPIFlash_ReadDataCallback</a> from appcallback.o(i.SPIFlash_ReadDataCallback) referenced from appcallback.o(.constdata)
 <LI><a href="#[20]">SPIFlash_ReadDataCallback</a> from appcallback.o(i.SPIFlash_ReadDataCallback) referenced from appfunctions.o(i.App_Initiate)
 <LI><a href="#[8]">SVC_Handler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[18]">TALARM_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[13]">TMR0_IRQHandler</a> from interrupthandler.o(i.TMR0_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[14]">TMR1_IRQHandler</a> from interrupthandler.o(i.TMR1_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[15]">UART0_IRQHandler</a> from startup_isd9100.o(.text) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[22]">UserEvent_ProcessCallback</a> from appcallback.o(i.UserEvent_ProcessCallback) referenced from appcallback.o(.constdata)
 <LI><a href="#[c]">WDT_IRQHandler</a> from interrupthandler.o(i.WDT_IRQHandler) referenced from startup_isd9100.o(RESET)
 <LI><a href="#[25]">__main</a> from __main.o(!!!main) referenced from startup_isd9100.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[27]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[29]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[c2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2a]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[c4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[c5]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[cf]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[d2]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[d3]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[d4]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[d5]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[d7]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[33]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[d9]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[da]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[db]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[dc]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[dd]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[de]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[28]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[df]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[e0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; App_ProcessPlay &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[32]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[e2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[34]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[24]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_isd9100.o(.text))

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ALC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TALARM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_isd9100.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c1]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Line
</UL>

<P><STRONG><a name="[37]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[36]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_SetOutputBuf
</UL>

<P><STRONG><a name="[e4]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeInitiate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_SetOutputBuf
</UL>

<P><STRONG><a name="[e5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[e6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Open
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_SetSampleRate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetWorkingFreq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetVarClock
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBusClock
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetBusClock
</UL>

<P><STRONG><a name="[e7]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>__aeabi_idivmod</STRONG> (Thumb, 460 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[ec]"></a>_dfixu</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[ed]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[ee]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[ef]"></a>_dmul</STRONG> (Thumb, 592 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[31]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[f0]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f1]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[f2]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>App_Initiate</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, appfunctions.o(i.App_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = App_Initiate &rArr; NuLiteExApp_DecodeInitiate
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Initiate
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Set
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeInitiate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetAudioNum
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>App_ProcessPlay</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, appfunctions.o(i.App_ProcessPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = App_ProcessPlay &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>App_StartPlay</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, appfunctions.o(i.App_StartPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = App_StartPlay &rArr; NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByID
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_KeypadHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayPrev_KeypadHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayNext_KeypadHandler
</UL>

<P><STRONG><a name="[4c]"></a>App_StopPlay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, appfunctions.o(i.App_StopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = App_StopPlay &rArr; NuLiteExApp_DecodeStopPlay &rArr; Playback_Remove &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Stop
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_KeypadHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>AudioRom_GetAudioChunkInfo</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, audiorom.o(i.AudioRom_GetAudioChunkInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AudioRom_GetAudioChunkInfo &rArr; AudioRom_GetRomHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetRomHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByID
</UL>

<P><STRONG><a name="[44]"></a>AudioRom_GetAudioNum</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, audiorom.o(i.AudioRom_GetAudioNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioRom_GetAudioNum
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[51]"></a>AudioRom_GetRomHeader</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, audiorom.o(i.AudioRom_GetRomHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioRom_GetRomHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetAudioChunkInfo
</UL>

<P><STRONG><a name="[54]"></a>BIQ_Reset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, biq.o(i.BIQ_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>

<P><STRONG><a name="[55]"></a>BIQ_SetCoeff</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, biq.o(i.BIQ_SetCoeff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BIQ_SetCoeff
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>

<P><STRONG><a name="[76]"></a>BufCtrl_WriteWithCount</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, bufctrl.o(i.BufCtrl_WriteWithCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BufCtrl_WriteWithCount
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
</UL>

<P><STRONG><a name="[1c]"></a>CAPS_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, interrupthandler.o(i.CAPS_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>CLK_EnableLDO</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, clk.o(i.CLK_EnableLDO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_EnableLDO
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>

<P><STRONG><a name="[59]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_EnableXtalRC
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
</UL>

<P><STRONG><a name="[5a]"></a>CLK_GetHCLKFreq</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, clk.o(i.CLK_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetVarClock
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBusClock
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetBusClock
</UL>

<P><STRONG><a name="[5c]"></a>CLK_SetHCLK</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Unlock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
</UL>

<P><STRONG><a name="[aa]"></a>CLK_SetModuleClock</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
</UL>

<P><STRONG><a name="[ab]"></a>DPWM_Open</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dpwm.o(i.DPWM_Open))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
</UL>

<P><STRONG><a name="[5d]"></a>DPWM_SetSampleRate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dpwm.o(i.DPWM_SetSampleRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
</UL>

<P><STRONG><a name="[23]"></a>Default_KeyHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, inputkeyactions.o(i.Default_KeyHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Default_KeyHandler &rArr; Playback_KeypadHandler &rArr; App_StartPlay &rArr; NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_KeypadHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayPrev_KeypadHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayNext_KeypadHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> configio.o(.constdata)
</UL>
<P><STRONG><a name="[f]"></a>GPAB_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, interrupthandler.o(i.GPAB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>GPIO_SetMode</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Initiate
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, i2c0int.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearTimeoutFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>I2C_ClearTimeoutFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.I2C_ClearTimeoutFlag))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>I2C_EnableInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.I2C_EnableInt))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>I2C_MasterTx</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, i2c0int.o(i.I2C_MasterTx))
<BR>[Address Reference Count : 1]<UL><LI> ly096bg30.o(i.OLED_SingleWrite)
</UL>
<P><STRONG><a name="[63]"></a>I2C_Open</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, i2c.o(i.I2C_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Init
</UL>

<P><STRONG><a name="[64]"></a>Init_LCD</STRONG> (Thumb, 172 bytes, Stack size 4 bytes, ly096bg30.o(i.Init_LCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_LCD &rArr; oledWriteCommand &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>InputKey_Change</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, configio.o(i.InputKey_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InputKey_Change &rArr; Keypad_InitTgr
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_InitTgr
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[68]"></a>InputKey_Initiate</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, configio.o(i.InputKey_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InputKey_Initiate &rArr; TIMER_GetWorkingFreq &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetWorkingFreq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_InitKeypad
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Change
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>Keypad_InitKeypad</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, keypad.o(i.Keypad_InitKeypad))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[67]"></a>Keypad_InitTgr</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, keypad.o(i.Keypad_InitTgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Keypad_InitTgr
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Change
</UL>

<P><STRONG><a name="[6e]"></a>Keypad_ScanTgr</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, keypad.o(i.Keypad_ScanTgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Keypad_ScanTgr &rArr; Keypad_TgrMapHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_TgrMapHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgrPort
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>Keypad_ScanTgrPort</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, keypad.o(i.Keypad_ScanTgrPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Keypad_ScanTgrPort
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgr
</UL>

<P><STRONG><a name="[af]"></a>Keypad_TgrDecDebounceCounter</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, keypad.o(i.Keypad_TgrDecDebounceCounter))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>Keypad_TgrMapHandler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, keypad.o(i.Keypad_TgrMapHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Keypad_TgrMapHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgr
</UL>

<P><STRONG><a name="[43]"></a>NuLiteExApp_DecodeInitiate</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, nuliteexapp_decode.o(i.NuLiteExApp_DecodeInitiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NuLiteExApp_DecodeInitiate
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[47]"></a>NuLiteExApp_DecodeProcess</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, nuliteexapp_decode.o(i.NuLiteExApp_DecodeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_UpdateOutputBuf
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_NeedUpdateOutputBuf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteEx_DecodeProcess
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteEx_DecodeIsEnd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufCtrl_WriteWithCount
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ProcessPlay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[77]"></a>NuLiteExApp_DecodeStartPlayByAddr</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, nuliteexapp_decode.o(i.NuLiteExApp_DecodeStartPlayByAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_SetOutputBuf
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteEx_DecodeInitiate
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByID
</UL>

<P><STRONG><a name="[49]"></a>NuLiteExApp_DecodeStartPlayByID</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, nuliteexapp_decode.o(i.NuLiteExApp_DecodeStartPlayByID))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioRom_GetAudioChunkInfo
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
</UL>

<P><STRONG><a name="[4d]"></a>NuLiteExApp_DecodeStopPlay</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, nuliteexapp_decode.o(i.NuLiteExApp_DecodeStopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NuLiteExApp_DecodeStopPlay &rArr; Playback_Remove &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
</UL>

<P><STRONG><a name="[78]"></a>NuLiteEx_DecodeInitiate</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, nuliteex.o(i.NuLiteEx_DecodeInitiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NuLiteEx_DecodeInitiate &rArr; NuLiteXCodec_DecodeInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteXCodec_DecodeInitial
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[73]"></a>NuLiteEx_DecodeIsEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nuliteex.o(i.NuLiteEx_DecodeIsEnd))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
</UL>

<P><STRONG><a name="[74]"></a>NuLiteEx_DecodeProcess</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, nuliteex.o(i.NuLiteEx_DecodeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteXCodec_DecodeProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
</UL>

<P><STRONG><a name="[7c]"></a>NuLiteXCodec_DecodeInitial</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, nulitedecode.o(i.NuLiteXCodec_DecodeInitial))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NuLiteXCodec_DecodeInitial
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteEx_DecodeInitiate
</UL>

<P><STRONG><a name="[7d]"></a>NuLiteXCodec_DecodeProcess</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, nulitedecode.o(i.NuLiteXCodec_DecodeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rmlt_coefs_to_samples
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteEx_DecodeProcess
</UL>

<P><STRONG><a name="[ba]"></a>NuLiteXCodec_f_categorize</STRONG> (Thumb, 640 bytes, Stack size 76 bytes, nulitedecode.o(i.NuLiteXCodec_f_categorize))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NuLiteXCodec_f_categorize
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_decoder
</UL>

<P><STRONG><a name="[bf]"></a>OLED_SingleWrite</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, ly096bg30.o(i.OLED_SingleWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OLED_SingleWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledWriteData
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledWriteCommand
</UL>

<P><STRONG><a name="[80]"></a>OutputPin_Initiate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, configio.o(i.OutputPin_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OutputPin_Initiate &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>OutputPin_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, configio.o(i.OutputPin_Set))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[92]"></a>PDMA_DisableInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pdma.o(i.PDMA_DisableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PDMA_DisableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[8e]"></a>PDMA_EnableInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pdma.o(i.PDMA_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PDMA_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[1a]"></a>PDMA_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, interrupthandler.o(i.PDMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PDMA_IRQHandler &rArr; Playback_Process &rArr; PdmaCtrl_Start &rArr; PDMA_SetTransferCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>PDMA_Open</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pdma.o(i.PDMA_Open))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[8b]"></a>PDMA_SetTransferAddr</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, pdma.o(i.PDMA_SetTransferAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PDMA_SetTransferAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[8c]"></a>PDMA_SetTransferCnt</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, pdma.o(i.PDMA_SetTransferCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PDMA_SetTransferCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[8d]"></a>PDMA_SetTransferDirection</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pdma.o(i.PDMA_SetTransferDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PDMA_SetTransferDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[82]"></a>PDMA_SetTransferMode</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, pdma.o(i.PDMA_SetTransferMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
</UL>

<P><STRONG><a name="[90]"></a>PDMA_Trigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pdma.o(i.PDMA_Trigger))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
</UL>

<P><STRONG><a name="[84]"></a>PWM_ConfigOutputChannel</STRONG> (Thumb, 342 bytes, Stack size 144 bytes, pwm.o(i.PWM_ConfigOutputChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = PWM_ConfigOutputChannel &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
</UL>

<P><STRONG><a name="[b3]"></a>PWM_DisableOutput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(i.PWM_DisableOutput))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_EventHandler
</UL>

<P><STRONG><a name="[b2]"></a>PWM_EnableOutput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(i.PWM_EnableOutput))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_EventHandler
</UL>

<P><STRONG><a name="[b5]"></a>PWM_Start</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, pwm.o(i.PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PWM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Start
</UL>

<P><STRONG><a name="[b6]"></a>PWM_Stop</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, pwm.o(i.PWM_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PWM_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Stop
</UL>

<P><STRONG><a name="[86]"></a>PdmaCtrl_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pdmactrl.o(i.PdmaCtrl_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PdmaCtrl_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>PdmaCtrl_Open</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, pdmactrl.o(i.PdmaCtrl_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PdmaCtrl_Open &rArr; PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferMode
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferDirection
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferCnt
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferAddr
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_Open
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
</UL>

<P><STRONG><a name="[8f]"></a>PdmaCtrl_Start</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, pdmactrl.o(i.PdmaCtrl_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PdmaCtrl_Start &rArr; PDMA_SetTransferCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_Trigger
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
</UL>

<P><STRONG><a name="[95]"></a>PdmaCtrl_Stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pdmactrl.o(i.PdmaCtrl_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
</UL>

<P><STRONG><a name="[61]"></a>PlayNext_KeypadHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, inputkeyactions.o(i.PlayNext_KeypadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = PlayNext_KeypadHandler &rArr; App_StartPlay &rArr; NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Line
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
</UL>

<P><STRONG><a name="[5f]"></a>PlayPrev_KeypadHandler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, inputkeyactions.o(i.PlayPrev_KeypadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = PlayPrev_KeypadHandler &rArr; App_StartPlay &rArr; NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Line
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
</UL>

<P><STRONG><a name="[7a]"></a>Playback_Add</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, playback.o(i.Playback_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Playback_Add &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_DisableInt
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[9b]"></a>Playback_AdjustVolumeDBStep</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, playback.o(i.Playback_AdjustVolumeDBStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Playback_AdjustVolumeDBStep
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_VolumeFadeOut
</UL>

<P><STRONG><a name="[41]"></a>Playback_Initiate</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, playback.o(i.Playback_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Playback_Initiate
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ResetChannelVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[97]"></a>Playback_IsTargetVolume</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, playback.o(i.Playback_IsTargetVolume))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ProcessVolume
</UL>

<P><STRONG><a name="[60]"></a>Playback_KeypadHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, inputkeyactions.o(i.Playback_KeypadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Playback_KeypadHandler &rArr; App_StartPlay &rArr; NuLiteExApp_DecodeStartPlayByID &rArr; NuLiteExApp_DecodeStartPlayByAddr &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Line
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_KeyHandler
</UL>

<P><STRONG><a name="[72]"></a>Playback_NeedUpdateOutputBuf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, playback.o(i.Playback_NeedUpdateOutputBuf))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
</UL>

<P><STRONG><a name="[81]"></a>Playback_Process</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, playback.o(i.Playback_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Playback_Process &rArr; PdmaCtrl_Start &rArr; PDMA_SetTransferCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ProcessVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>Playback_ProcessVolume</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, playback.o(i.Playback_ProcessVolume))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Playback_ProcessVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_IsTargetVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Process
</UL>

<P><STRONG><a name="[7b]"></a>Playback_Remove</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, playback.o(i.Playback_Remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Playback_Remove &rArr; SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_DisableInt
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_ChangeSR
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStopPlay
</UL>

<P><STRONG><a name="[94]"></a>Playback_ResetChannelVolume</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, playback.o(i.Playback_ResetChannelVolume))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Initiate
</UL>

<P><STRONG><a name="[79]"></a>Playback_SetOutputBuf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, playback.o(i.Playback_SetOutputBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Playback_SetOutputBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeStartPlayByAddr
</UL>

<P><STRONG><a name="[4b]"></a>Playback_StartPlay</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, playback.o(i.Playback_StartPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Playback_StartPlay &rArr; PdmaCtrl_Start &rArr; PDMA_SetTransferCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Start
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ResetChannelVolume
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
</UL>

<P><STRONG><a name="[4e]"></a>Playback_StopPlay</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, playback.o(i.Playback_StopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Playback_StopPlay &rArr; Playback_VolumeFadeOut &rArr; Playback_AdjustVolumeDBStep
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_EnableInt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_DisableInt
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_VolumeFadeOut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_ResetChannelVolume
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayPrev_KeypadHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayNext_KeypadHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[75]"></a>Playback_UpdateOutputBuf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, playback.o(i.Playback_UpdateOutputBuf))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteExApp_DecodeProcess
</UL>

<P><STRONG><a name="[99]"></a>Playback_VolumeFadeOut</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, playback.o(i.Playback_VolumeFadeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Playback_VolumeFadeOut &rArr; Playback_AdjustVolumeDBStep
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_AdjustVolumeDBStep
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
</UL>

<P><STRONG><a name="[1e]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupthandler.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>SPIFlash_GetChipInfo</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, spiflash.o(i.SPIFlash_GetChipInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPIFlash_GetChipInfo &rArr; SPIFlash_SendRecOneData
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_SendRecOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[9e]"></a>SPIFlash_Initiate</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, main.o(i.SPIFlash_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPIFlash_Initiate &rArr; SPIFlash_Open &rArr; SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_PowerDown
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Open
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_GetChipInfo
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>SPIFlash_Open</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, spiflash.o(i.SPIFlash_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPIFlash_Open &rArr; SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[a0]"></a>SPIFlash_PowerDown</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, spiflash.o(i.SPIFlash_PowerDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIFlash_PowerDown &rArr; SPIFlash_SendRecOneData
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_SendRecOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[a1]"></a>SPIFlash_Read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, spiflash.o(i.SPIFlash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPIFlash_Read &rArr; SPIFlash_ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadStart
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadEnd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadDataCallback
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[a4]"></a>SPIFlash_ReadData</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, spiflash.o(i.SPIFlash_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPIFlash_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>

<P><STRONG><a name="[20]"></a>SPIFlash_ReadDataCallback</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, appcallback.o(i.SPIFlash_ReadDataCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPIFlash_ReadDataCallback &rArr; SPIFlash_Read &rArr; SPIFlash_ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Address Reference Count : 2]<UL><LI> appfunctions.o(i.App_Initiate)
<LI> appcallback.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>SPIFlash_ReadEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spiflash.o(i.SPIFlash_ReadEnd))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>

<P><STRONG><a name="[a3]"></a>SPIFlash_ReadStart</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, spiflash.o(i.SPIFlash_ReadStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPIFlash_ReadStart
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>

<P><STRONG><a name="[9d]"></a>SPIFlash_SendRecOneData</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, spiflash.o(i.SPIFlash_SendRecOneData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPIFlash_SendRecOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_PowerDown
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_GetChipInfo
</UL>

<P><STRONG><a name="[a6]"></a>SPI_GetBusClock</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, spi.o(i.SPI_GetBusClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_GetBusClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>

<P><STRONG><a name="[a2]"></a>SPI_Open</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, spi.o(i.SPI_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_Open &rArr; SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetVarClock
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBusClock
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetBusClock
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Open
</UL>

<P><STRONG><a name="[a8]"></a>SPI_SetBusClock</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, spi.o(i.SPI_SetBusClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_SetBusClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>

<P><STRONG><a name="[a7]"></a>SPI_SetVarClock</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, spi.o(i.SPI_SetVarClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_SetVarClock &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Open
</UL>

<P><STRONG><a name="[93]"></a>SPK_ChangeSR</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, micspk.o(i.SPK_ChangeSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPK_ChangeSR &rArr; DPWM_SetSampleRate &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_SetSampleRate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Remove
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_Add
</UL>

<P><STRONG><a name="[a9]"></a>SPK_Open</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, micspk.o(i.SPK_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SPK_Open &rArr; PdmaCtrl_Open &rArr; PDMA_SetTransferMode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Open
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_Open
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQFilter_Setting
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>SPK_Start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, micspk.o(i.SPK_Start))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StartPlay
</UL>

<P><STRONG><a name="[9a]"></a>SPK_Stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, micspk.o(i.SPK_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_StopPlay
</UL>

<P><STRONG><a name="[58]"></a>SYS_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(i.SYS_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
</UL>

<P><STRONG><a name="[87]"></a>SYS_ResetModule</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sys.o(i.SYS_ResetModule))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
</UL>

<P><STRONG><a name="[57]"></a>SYS_Unlock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sys.o(i.SYS_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
</UL>

<P><STRONG><a name="[ac]"></a>SysClk_InitiateRC</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, sysclk.o(i.SysClk_InitiateRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysClk_InitiateRC &rArr; CLK_SetHCLK &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, system_isd9100.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWM_SetSampleRate
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
</UL>

<P><STRONG><a name="[ad]"></a>TIMER_GetModuleClock</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, timer.o(i.TIMER_GetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetWorkingFreq
</UL>

<P><STRONG><a name="[6a]"></a>TIMER_GetWorkingFreq</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, timer.o(i.TIMER_GetWorkingFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIMER_GetWorkingFreq &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
</UL>

<P><STRONG><a name="[ae]"></a>TIMER_Open</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, timer.o(i.TIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
</UL>

<P><STRONG><a name="[13]"></a>TMR0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, interrupthandler.o(i.TMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, interrupthandler.o(i.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_OuputCurve
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_TgrDecDebounceCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>UltraIO_EventHandler</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ultraio.o(i.UltraIO_EventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UltraIO_EventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EnableOutput
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_DisableOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserEvent_ProcessCallback
</UL>

<P><STRONG><a name="[b4]"></a>UltraIO_Initiate</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, ultraio.o(i.UltraIO_Initiate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = UltraIO_Initiate &rArr; PWM_ConfigOutputChannel &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>UltraIO_OuputCurve</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ultraio.o(i.UltraIO_OuputCurve))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>UltraIO_Start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ultraio.o(i.UltraIO_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UltraIO_Start &rArr; PWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StartPlay
</UL>

<P><STRONG><a name="[4f]"></a>UltraIO_Stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ultraio.o(i.UltraIO_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UltraIO_Stop &rArr; PWM_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
</UL>

<P><STRONG><a name="[22]"></a>UserEvent_ProcessCallback</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, appcallback.o(i.UserEvent_ProcessCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UserEvent_ProcessCallback &rArr; UltraIO_EventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_EventHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> appcallback.o(.constdata)
</UL>
<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupthandler.o(i.WDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pdma.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDMA_SetTransferMode
</UL>

<P><STRONG><a name="[b7]"></a>clear_LCD</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, ly096bg30.o(i.clear_LCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = clear_LCD &rArr; oled_address &rArr; oledWriteCommand &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_address
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>i2c_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.i2c_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_Init &rArr; I2C_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Open
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = main &rArr; App_ProcessPlay &rArr; NuLiteExApp_DecodeProcess &rArr; NuLiteEx_DecodeProcess &rArr; NuLiteXCodec_DecodeProcess &rArr; f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Line
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_LCD
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraIO_Initiate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClk_InitiateRC
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputPin_Initiate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_ScanTgr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputKey_Initiate
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LCD
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EnableInt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableLDO
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_StopPlay
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ProcessPlay
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Initiate
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[65]"></a>oledWriteCommand</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ly096bg30.o(i.oledWriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oledWriteCommand &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SingleWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LCD
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_address
</UL>

<P><STRONG><a name="[b9]"></a>oledWriteData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ly096bg30.o(i.oledWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oledWriteData &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SingleWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_LCD
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_C
</UL>

<P><STRONG><a name="[b8]"></a>oled_address</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, ly096bg30.o(i.oled_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = oled_address &rArr; oledWriteCommand &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_LCD
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_C
</UL>

<P><STRONG><a name="[c0]"></a>print_C</STRONG> (Thumb, 72 bytes, Stack size 36 bytes, ly096bg30.o(i.print_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = print_C &rArr; oled_address &rArr; oledWriteCommand &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_address
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oledWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Line
</UL>

<P><STRONG><a name="[91]"></a>print_Line</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ly096bg30.o(i.print_Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = print_Line &rArr; print_C &rArr; oled_address &rArr; oledWriteCommand &rArr; OLED_SingleWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_C
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playback_KeypadHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayPrev_KeypadHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayNext_KeypadHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[be]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, appfunctions.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Initiate
</UL>

<P><STRONG><a name="[12]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_isd9100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_isd9100.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>BIQFilter_Setting</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, micspk.o(i.BIQFilter_Setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BIQFilter_Setting &rArr; BIQ_SetCoeff
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQ_SetCoeff
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BIQ_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPK_Open
</UL>

<P><STRONG><a name="[88]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pdmactrl.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PdmaCtrl_Init
</UL>

<P><STRONG><a name="[bb]"></a>f_decode_vector_quantized_mlt_indices</STRONG> (Thumb, 902 bytes, Stack size 152 bytes, nulitedecode.o(i.f_decode_vector_quantized_mlt_indices))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_decoder
</UL>

<P><STRONG><a name="[7e]"></a>f_decoder</STRONG> (Thumb, 510 bytes, Stack size 48 bytes, nulitedecode.o(i.f_decoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = f_decoder &rArr; f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteXCodec_f_categorize
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_decode_vector_quantized_mlt_indices
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteXCodec_DecodeProcess
</UL>

<P><STRONG><a name="[7f]"></a>f_rmlt_coefs_to_samples</STRONG> (Thumb, 908 bytes, Stack size 128 bytes, nulitedecode.o(i.f_rmlt_coefs_to_samples))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = f_rmlt_coefs_to_samples
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NuLiteXCodec_DecodeProcess
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
